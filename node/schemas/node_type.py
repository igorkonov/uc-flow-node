from typing import List
from uc_flow_schemas import flow
from uc_flow_schemas.flow import Property, DisplayOptions, OptionValue

from node.schemas.enums import Values


class NodeType(flow.NodeType):
    id: str = '3aa5720b-0a02-4f8c-8397-872378a23200'
    type: flow.NodeType.Type = flow.NodeType.Type.action
    name: str = 'test_cube'
    is_public: bool = False
    displayName: str = 'Test cube'
    icon: str = '<svg><text x="8" y="50" font-size="50">ü§ñ</text></svg>'
    description: str = '–ö—É–±–∏–∫ –¥–ª—è –ø—Ä–∞–∫—Ç–∏–∫–∏'
    properties: List[Property] = [
        Property(
            displayName='–¢–µ–∫—Å—Ç–æ–≤–æ–µ –ø–æ–ª–µ',
            name='text_field',
            type=Property.Type.STRING,
            placeholder='–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ',
            description='–¢–µ–∫—Å—Ç–æ–≤–æ–µ –ø–æ–ª–µ',
            required=True,
            default='0',
        ),
        Property(
            displayName='–ß–∏—Å–ª–æ–≤–æ–µ –ø–æ–ª–µ',
            name='number_field',
            type=Property.Type.NUMBER,
            placeholder='–í–≤–µ–¥–∏—Ç–µ –ª—é–±–æ–µ —á–∏—Å–ª–æ',
            description='–ß–∏—Å–ª–æ–≤–æ–µ –ø–æ–ª–µ',
            required=True,
            default=0,
        ),
        Property(
            displayName='–ß–∏—Å–ª–æ/—Ç–µ–∫—Å—Ç',
            name='switch_field',
            type=Property.Type.BOOLEAN,
            description='–ü–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—å –≤–ª–∏—è–µ—Ç –Ω–∞ —Ç–∏–ø –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—ã—Ö –¥–∞–Ω–Ω—ã—Ö. int/str',
            required=True,
            default=True,
        ),
        Property(
            displayName='–ü–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—å',
            name='toggle_field',
            type=Property.Type.BOOLEAN,
            description='–û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è',
            required=True,
            default=False,
        ),
        Property(
            displayName="–ó–Ω–∞—á–µ–Ω–∏–µ 1",
            name="value_1",
            type=Property.Type.OPTIONS,
            noDataExpression=True,
            options=[
                OptionValue(
                    name="–ó–Ω–∞—á–µ–Ω–∏–µ 1",
                    value=Values.value_1,
                    description="",
                ),
                OptionValue(
                    name="–ó–Ω–∞—á–µ–Ω–∏–µ 2",
                    value=Values.value_2,
                    description="",
                ),
            ],
            displayOptions=DisplayOptions(
                show={"toggle_field": [True]},
            ),
        ),
        Property(
            displayName="–ó–Ω–∞—á–µ–Ω–∏–µ 2",
            name="value_2",
            type=Property.Type.OPTIONS,
            noDataExpression=True,
            options=[
                OptionValue(
                    name="–ó–Ω–∞—á–µ–Ω–∏–µ 1",
                    value=Values.value_1,
                    description="",
                ),
                OptionValue(
                    name="–ó–Ω–∞—á–µ–Ω–∏–µ 2",
                    value=Values.value_2,
                    description="",
                ),
            ],
            displayOptions=DisplayOptions(
                show={"toggle_field": [True]},
            ),
        ),
        Property(
            displayName="–ü–æ—á—Ç–∞",
            name="email_field",
            type=Property.Type.EMAIL,
            placeholder="–í–≤–µ–¥–∏—Ç–µ –ø–æ—á—Ç—É",
            description="–ü–æ–ª–µ –¥–ª—è –≤–≤–æ–¥–∞ –ø–æ—á—Ç—ã",
            required=True,
            displayOptions=DisplayOptions(
                show={
                    "toggle_field": [True],
                    "value_1": [Values.value_1],
                    "value_2": [Values.value_2],
                },
            ),
        ),
        Property(
            displayName="–î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è",
            name="datetime_field",
            type=Property.Type.DATETIME,
            placeholder="–í–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è",
            description="–ü–æ–ª–µ –¥–ª—è –≤–≤–æ–¥–∞ –¥–∞—Ç—ã –∏ –≤—Ä–µ–º—è",
            required=True,
            displayOptions=DisplayOptions(
                show={
                    "toggle_field": [True],
                    "value_1": [Values.value_1],
                    "value_2": [Values.value_2],
                },
            ),
        ),
    ]
